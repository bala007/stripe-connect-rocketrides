extends layout

block header
  if showBanner
    .banner
      .message
        strong Congratulations, your account is set up.
        span.secondary-text Fire up your rocket and take your first passengers.
block content
  - const currencyOptions = [{value: 'USD'}, {value: 'EUR'}, {value: 'GBP'}, {value: 'AUD'}, {value: 'HKD'}]
  .dashboard
    .user
      .block.profile
        .photo
        p Pilot since #{moment(pilot.created).format('MMM YYYY')}
        h1 #{pilot.displayName()}
        h2
          a(href='/pilots/stripe/dashboard?account=true') View Stripe account

      .block.week
        p This week
        h1 $#{(ridesTotalAmount / 100).toFixed(2)}
        h2 #{rides.length} rides
      .block.available
        p Your balance
        h1 $#{((balanceAvailable + balancePending) / 100).toFixed(2)}
        h2 $#{(balanceAvailable / 100).toFixed(2)} available
      .block.stripe
        form.payout(action='/pilots/stripe/payout', method='POST', autocomplete='off')
          input(class='primary' type='submit', value='Pay out now' disabled=(balanceAvailable===0))
        p
          a(href='/pilots/stripe/dashboard') View payouts on Stripe
        form.left(action='/pilots/transfer-to-platform', method='POST', autocomplete='off')
          p
            | Application Fees:&nbsp;
            input(name='application_fees', value='', type='text')
            label(for='application_fees_currency') Currency:&nbsp;
              select#currency(name='application_fees_currency' size='1')
                each currency in currencyOptions
                  option(value=(currency.value)) #{currency.value}
          <br/>
          input(type='submit', name="push_funds", value='Pay Application fees to Platform', class='primary-action')
    section.rides
      h4 Recent rides
      if rides.length == 0
        .no-rides
          .rocket
          h1 No rides to display yet
          h2 Fly with some passengers!
      else
        .list
          - const currencySymbolMap = {'USD': '$', 'AUD': 'AU$', 'EUR': '€', 'GBP': '£', HKD: 'HK$', 'usd': '$'}
          each ride in rides
            .row
              .cell.name= ride.passenger.displayName()
              .cell.date= moment(new Date(Date.parse(ride.created))).calendar()
              .cell.price #{currencySymbolMap[ride.currency]}#{(ride.amountForPilot() / 100).toFixed(2)}

block footer
  .annotation.card.dashboard-banner(class=(showBanner ? '' : 'hidden'))
    h4 The Connect Express onboarding flow is now complete.
      a.show-more(href="#") &nbsp;(show more)
    .description
      p Express includes the #[strong Stripe account ID] that was just created, so after the flow redirects to Rocket Rides we can save it to the database.
      p This account ID can then be used to #[a(href="https://stripe.com/docs/api/balance/balance_retrieve" target="_blank") retrieve the pilot’s balance], provide a #[a(href="https://stripe.com/docs/connect/destination-charges" target="_blank") destination for payments], or #[a(href="https://stripe.com/docs/connect/payouts#instant-payouts" target="_blank") create Instant Payouts].
    form.right
      button.primary-action.next Next step
  .annotation.card.dashboard-simulate(class=(showBanner ? 'hidden' : ''))
    h4 Simulate a passenger ride to create a payment for this pilot.
      a.show-more(href="#") &nbsp;(show more)
    .description
      ol
        li The balance is automatically fetched from the Stripe API.
        li #[strong View payouts on Stripe] lets pilots see their payouts or edit their account information.
        li #[strong Pay out now] uses the Stripe API to #[a(href="https://stripe.com/docs/connect/payouts#instant-payouts" target="_blank") generate a payout] of the available balance. #[a(href="https://stripe.com/docs/connect/payouts#instant-payouts" target="_blank") Instant Payouts] are available with a debit card.
    form.left(action='/pilots/rides', method='POST', autocomplete='off')
      p
        | Amount:&nbsp;
        input(name='amount', value='', type='text')
        <br/>
        label(for='currency') Currency:&nbsp;
          select#currency(name='currency' size='1')
            each currency in currencyOptions
              option(value=(currency.value)) #{currency.value}
        <br/>
        label(for='chargeType') Transfer amount:&nbsp;
          - const chargeTypeOptions = [{value: 'Platform', display: 'Direct to Platform'}, {value: 'Destination Charge', display: 'Destination to Pilot via Platform'}, {value: 'Direct Charge', display: 'Direct to Pilot'}]
          select#chargeType(name='chargeType' size='1')
            each chargeType in chargeTypeOptions
              option(value=(chargeType.value)) #{chargeType.display}
        <br/>
        label(for='applicationFees') Application Fees:&nbsp;
          - const applicationFeesOptions = [{value: 'No'}, {value: 'Yes'}]
          select#applicationFees(name='applicationFees' size='1')
            each applicationFees in applicationFeesOptions
              option(value=(applicationFees.value)) #{applicationFees.value}
      <br/>
      input(type='submit', name="immediate_balance", value='Create passenger ride', class='primary-action')
      button#myBtn(type='button', class='primary-action', data-paymentIntent='12345', data-publishKey='pk_test_4ZXpoVP3gkXxSSfnpzL6E9G400arrENpcP') Create passenger ride with card

    <br/>
    h4 Simulate a payment from Platform.
      a.show-more(href="#") &nbsp;(show more)
    .description
      ol
        li This will help you to pull remaining payments from platform.
    form.left(action='/pilots/pull-funds', method='POST', autocomplete='off')
      p
        | Amount:&nbsp;
        input(name='pull_amount', value='', type='text')
      <br/>
      input(type='submit', name="pull_funds", value='Pull Funds From Platform', class='primary-action')

    script(src="https://js.stripe.com/v3/")
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <div class="card-content">
                <form id="payment-form">
                    <div class="row">
                        <div class="field">
                            <label for="first_name">First Name</label>
                            <input id="first_name" type="text" placeholder="John">
                        </div>
                        <div class="field">
                            <label for="last_name">Last Name</label>
                            <input id="last_name" type="text" placeholder="Wick">
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                    <div id="card-element">
                    <!-- Elements will create input elements here -->
                    </div>

                    <!-- We'll put the error messages in this element -->
                    <div id="card-errors" role="alert" style=""></div>

                    <button id="payWithCard" class='primary-action' style="margin-top:10px;">Pay with Card</button>
                </form>
            </div>
        </div>
    </div>